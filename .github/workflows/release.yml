name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release and Publish to npm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          VERSION=${GITHUB_REF#refs/tags/v}

          # Get previous tag (the tag before current one in version order)
          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -A 1 "^${CURRENT_TAG}$" | tail -1)

          # Check if we found a valid previous tag
          if [ -n "$PREVIOUS_TAG" ] && [ "$PREVIOUS_TAG" != "$CURRENT_TAG" ]; then
            CHANGELOG_LINK="See [CHANGELOG](https://github.com/${{ github.repository }}/compare/${PREVIOUS_TAG}...${CURRENT_TAG}) for details."
          else
            CHANGELOG_LINK="Initial release."
          fi

          # Generate release body
          cat << EOF >> $GITHUB_OUTPUT
          body<<RELEASE_BODY
          ## Changes in v${VERSION}

          ${CHANGELOG_LINK}

          ## Installation

          \`\`\`bash
          npm install flowerpassword.js@${VERSION}
          \`\`\`
          RELEASE_BODY
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.version.outputs.version }}
          body: ${{ steps.release_notes.outputs.body }}
          draft: false
          prerelease: false
          files: |
            dist/**/*

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
